"""
Adquisici√≥n de como documentar en Python

Unidad: 00 Introducci√≥n a Python
Parte: Adquisici√≥n 01 Documentar

En este m√≥dulo aprenderemos sobre:
- Comentarios, ¬øc√≥mo usarlos y cu√°ndo?
- ¬øQu√© es un docstring, para qu√© sirve y cu√°les son sus usos?
- Buenas pr√°cticas
        
Autor: Lucho Urtubey

Versi√≥n: 1.0.0 (08-03-2025)
"""

# --------------------------------------------------------------------------------------------------
# COMENTARIOS
# --------------------------------------------------------------------------------------------------

# Esto es un comentario de una sola l√≠nea utilizando al principio el s√≠mbolo hashtag (#)
# Por convenci√≥n se recomienda no exceder de los 100 caracteres por l√≠nea
# Ejemplo de comentario largo:
# Este es un comentario muy largo que excede los 100 caracteres y por eso lo partimos en dos l√≠neas
# para que sea m√°s f√°cil de leer sin romper la convenci√≥n de no exceder 100 caracteres.
# Este es el √∫nico tipo de comentario real en Python
# Los comentarios no son le√≠dos por el programa, as√≠ que no interfiere en nuestro c√≥digo
# Su funci√≥n es la de ayudarnos a entender ciertas partes del c√≥digo
# Se recomienda el uso m√≠nimo necesario

# --------------------------------------------------------------------------------------------------
# DOCSTRINGS
# --------------------------------------------------------------------------------------------------

# Qu√© es un docstring?
# Es una documentaci√≥n que describe diferentes partes del c√≥digo, como modulos, funciones y clases
# Qu√© es un m√≥dulo? Es un archivo .py como este mismo.
# Pero y funciones y clases? No te preocupes lo veremos m√°s adelante.
# El docstring se escribe entre tres comillas dobles """ """ o entre tres comillas simples ''' '''
# Como reci√©n estamos arrancando s√≥lo lo utilizaremos al principio de cada archivo.
# Fijate desde la l√≠nea 1 a la 15
# Se lo conoce como docstring de m√≥dulo, sirve para describir el contenido y prop√≥sito del archivo
# S√≠ o s√≠ debe ir al principio del archivo
# Bueno todo muy lindo...pero para que nos sirve?
# Para tener el c√≥digo documentado, cuando tengas muchos archivos o trabajes en equipo
# Lo vas a agradecer.
# Es √∫til tanto para otros desarrolladores como para herramientas de documentaci√≥n autom√°tica.

# --------------------------------------------------------------------------------------------------
# BUENAS PR√ÅCTICAS
# --------------------------------------------------------------------------------------------------

# - Evitar comentarios redundantes: No comentes lo obvio.
# - Utilizar comentarios para explicar "por qu√©" se hace algo, no solo el "qu√©".
# - Mant√©n los comentarios claros y concisos.
# - Los docstrings deben usarse para documentar m√≥dulos, funciones y clases.
# - Para cualquier otra situaci√≥n, usa comentarios
# - Recuerda, los comentarios no son interpretados por Python, pero los docstrings s√≠.
# - Sugerencia para docstrings de m√≥dulos:
#       -Descripci√≥n del archivo, qu√© utiliza y qu√© requisitos tiene si los hay
#       -Autor (opcional)
#       -Contacto (opcional)
#       -Versi√≥n (opcional)
# - Ante cualquier duda, chec√° PEP 257 sugerencia oficial de Python
# - Recuerda, no hay convenci√≥n oficial, pero si es una sugerencia oficial... ü§∑‚Äç‚ôÇÔ∏è
